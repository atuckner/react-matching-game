// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render a Card 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    icon="flash"
    matched="false"
    selected="false"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <FontAwesome
          className="Card-icon Card-icon-show"
          name="flash"
          size="3x"
          style={
                    Object {
                              "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
                            }
          }
/>,
        <FontAwesome
          className="Card-icon Card-icon-hide"
          name="question"
          size="3x"
          style={
                    Object {
                              "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
                            }
          }
/>,
      ],
      "className": "Card Card-unselected",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "Card-icon Card-icon-show",
          "name": "flash",
          "size": "3x",
          "style": Object {
            "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "Card-icon Card-icon-hide",
          "name": "question",
          "size": "3x",
          "style": Object {
            "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FontAwesome
            className="Card-icon Card-icon-show"
            name="flash"
            size="3x"
            style={
                        Object {
                                    "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
                                  }
            }
/>,
          <FontAwesome
            className="Card-icon Card-icon-hide"
            name="question"
            size="3x"
            style={
                        Object {
                                    "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
                                  }
            }
/>,
        ],
        "className": "Card Card-unselected",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "Card-icon Card-icon-show",
            "name": "flash",
            "size": "3x",
            "style": Object {
              "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "Card-icon Card-icon-hide",
            "name": "question",
            "size": "3x",
            "style": Object {
              "textShadow": "0 1px 0 rgba(0, 0, 0, 0.1)",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
